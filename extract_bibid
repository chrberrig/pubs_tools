#!/bin/sh
# This script takes a single pdf-file argument and attempts extraction of bibliograpic identier. 
# This identifier, along the identifier type, is given as output.
[ -z "$1" -o ! -f "$1" ] && echo "Give either a valid pdf file as an argument." && exit 1
[ -f "$1" ] && file="${1}"

# bibid_types="doi:\nhttps://dx.doi.org/\narxiv:\nisbn:"
bibid_types="doi\narxiv\nisbn"

check_for_id(){
echo "${bibid_types}" | while read iden_type; do
	# Try to get Identifier and ID type from pdfinfo or pdftotext output.
	# while loop is executed in subshell
	
	presch_str="${iden_type}\(:\|\/\|\.org\/\)\([[:space:]]\)\?"
	# presch_str="\(https:\/\/\)\?${iden_type}\(:\|\/\|\.org\/\)\([[:space:]]\)\?" # [[:blank:]]?
	sch_str="${presch_str}[^@[:space:]]*"
	
	###
	
	id="$(pdfinfo "${file}" | grep -io -e "${sch_str}")" ||
	id="$(pdftotext "${file}" 2>/dev/null - | grep -io -e "${sch_str}" -m 1)"
	
		
	[ ! -z "${id}" ] && echo "${id}" && break 
	

done 
}
id_str="$(check_for_id)"
id_type="$(echo "${id_str}" | cut -d ":" -f1 | tr "[[:upper:]]" "[[:lower:]]")"
id="$(echo "${id_str}" | sed "s/^${id_type}:[[:space:]]*//gmi; s/[\.|\)|\;]*[[:space:]]*$//gm")"
file="$(pwd)/${file}"

# Output:
[ -z "${id}" ] && echo "No ID found" && exit 1 
echo "${id_type}: ${id}"
pubs add --${id_type} ${id} -d ${file}



# place at ###
	# Maybe generalizable using code below. Pre-search string gives odd newline....
	# pre_id="$(pdfinfo "${file}" | grep -io -e "${presch_str}")" || 
	# pre_id="$(pdftotext "${file}" 2>/dev/null - | grep -io -e "${presch_str}" -m 1)"
	# ed_str="s/^${iden_type}:[[:space:]]*//gm; s/[\.|\)|\;]*[[:space:]]*$//gm"
	# id="$(echo "${id}" | sed ${ed_str})"
	# pre_id="$(echo "${pre_id}" | sed "s/\n//mg" | sed "${ed_str}")"
	# id="$(echo "${id}" | sed "s/${pre_id}//mg")"
